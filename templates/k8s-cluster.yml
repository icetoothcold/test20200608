kube_network_plugin: calico
kube_service_addresses: 10.233.0.0/18
kube_pods_subnet: 10.233.64.0/18
kube_network_node_prefix: 24
kube_proxy_mode: ipvs
cluster_name: cluster.local

dns_mode: coredns
enable_coredns_k8s_external: false
coredns_k8s_external_zone: k8s_external.local
enable_coredns_k8s_endpoint_pod_names: false
deploy_netchecker: false
container_manager: docker
## Settings for containerized control plane (etcd/kubelet/secrets)
etcd_deployment_type: docker
kubelet_deployment_type: host
helm_deployment_type: host
kubernetes_audit: false
dynamic_kubelet_configuration: false
# pod security policy (RBAC must be enabled either by having 'RBAC' in authorization_modes or kubeadm enabled)
podsecuritypolicy_enabled: false

# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.
# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is "".
# kubelet_enforce_node_allocatable: pods

## Optionally reserve resources for OS system daemons.
# system_reserved: true
## Uncomment to override default values
# system_memory_reserved: 512M
# system_cpu_reserved: 500m
## Reservation for master hosts
# system_master_memory_reserved: 256M
# system_master_cpu_reserved: 250m

##
###### custom ######
##
kube_version: {{ kubeVersion }}
kube_image_repo: "{{ imageRepo }}/google-containers"
pod_infra_image_repo: "{{ imageRepo }}/google_containers/pause-{{ imageArch }}"
nodelocaldns_image_repo: "{{ imageRepo }}/k8s_gcr_io/k8s-dns-node-cache"
dnsautoscaler_image_repo: "{{ imageRepo }}/k8s_gcr_io/cluster-proportional-autoscaler-{{ imageArch }}"
registry_proxy_image_repo: "{{ imageRepo }}/google_containers/kube-registry-proxy"
metrics_server_image_repo: "{{ imageRepo }}/google_containers/metrics-server-amd64"
addon_resizer_image_repo: "{{ imageRepo }}/k8s_gcr_io/addon-resizer"
dashboard_image_repo: "{{ imageRepo }}/google_containers/kubernetes-dashboard-{{ imageArch }}"
busybox_image_repo: "{{ imageRepo }}/library/busybox"
test_image_repo: "{{ imageRepo }}/library/busybox"
nginx_image_repo: "{{ imageRepo }}/library/nginx"
ingress_nginx_controller_image_repo: "{{ imageRepo }}/kubernetes-ingress-controller/nginx-ingress-controller"
ingress_nginx_controller_image_tag: "{{ ingressNginxControllerImageTag }}"
calico_node_image_repo: "{{ imageRepo }}/calico/node"
calico_cni_image_repo: "{{ imageRepo }}/calico/cni"
calico_policy_image_repo: "{{ imageRepo }}/calico/kube-controllers"
calico_rr_image_repo: "{{ imageRepo }}/calico/routereflector"
calico_typha_image_repo: "{{ imageRepo }}/calico/typha"
etcd_image_repo: "{{ imageRepo }}/coreos/etcd"
flannel_image_repo: "{{ imageRepo }}/coreos/flannel"
flannel_cni_image_repo: "{{ imageRepo }}/coreos/flannel-cni"
coredns_image_repo: "{{ imageRepo }}/coredns/coredns"
coredns_image_tag: "{{ corednsVersion }}"
kubeadm_download_url: "{{ pkgRepo }}/kubernetes-release/release/{{ kubeadmVersion }}/bin/linux/{{ imageArch }}/kubeadm"
hyperkube_download_url: "{{ pkgRepo }}/kubernetes-release/release/{{ kubeVersion }}/bin/linux/{{ imageArch }}/hyperkube"
etcd_download_url: "{{ pkgRepo }}/coreos/etcd/releases/download/{{ etcdVersion }}/etcd-{{ etcdVersion }}-linux-{{ imageArch }}.tar.gz"
cni_download_url: "{{ pkgRepo }}/containernetworking/plugins/releases/download/{{ cniVersion }}/cni-plugins-linux-{{ imageArch }}-{{ cniVersion }}.tgz"
calicoctl_download_url: "{{ pkgRepo }}/projectcalico/calicoctl/releases/download/{{ calicoctlVersion }}/calicoctl-linux-{{ imageArch }}"
crictl_download_url: "{{ pkgRepo }}/kubernetes-sigs/cri-tools/releases/download/{{ crictlVersion }}/crictl-{{ crictlVersion }}-{{ ansibleSystem }}-{{ imageArch }}.tar.gz"

helm_version: "{{ helmVersion }}"
helm_image_repo: "{{ imageRepo }}/lachlanevenson/k8s-helm"
tiller_image_repo: "{{ imageRepo }}/kubernetes-helm/tiller"
helm_stable_repo_url: "{{ chartRepo }}/{{ localInfraChartRepo }}"

local_volume_provisioner_image_repo: "{{ imageRepo }}/external_storage/local-volume-provisioner"
local_volume_provisioner_image_tag: "{{ localVolumeProvisionerImageTag }}"
local_path_provisioner_image_repo: "{{ imageRepo }}/rancher/local-path-provisioner"
local_path_provisioner_image_tag: "{{ localPathProvisionerImageTag }}"

kube_basic_auth: true
kube_token_auth: true
kube_oidc_auth: true
kube_oidc_url: "https://dex.{{ clusterName }}.io/dex"
kube_oidc_client_id: loginapp
kube_oidc_ca_file: "/etc/ssl/dex/ca.pem"
kube_oidc_username_claim: name
kube_oidc_username_prefix: "oidc:"
kube_oidc_groups_claim: groups
cluster_api_vip: "{{ vip }}"
kube_oidc_dex_host: "dex.{{ clusterName }}.io"
kube_oidc_loginapp_host: "loginapp.{{ clusterName }}.io"
